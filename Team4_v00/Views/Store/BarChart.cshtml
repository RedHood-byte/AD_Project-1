@{ var history = (List<DisbursementDetail>)ViewData["histories"];
    var history2 = (List<Stationery>)ViewData["histories2"];
}

<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <title>bootstrap-select: Initialize with JS</title>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="robots" content="noindex, nofollow">
    <meta name="googlebot" content="noindex, nofollow">
    <meta name="viewport" content="width=device-width, initial-scale=1">


    <script type="text/javascript"
            src="//code.jquery.com/jquery-2.2.4.js"></script>

    <link rel="stylesheet" type="text/css" href="/css/result-light.css">

    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.10.0/js/bootstrap-select.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.10.0/css/bootstrap-select.min.css">
    <script type="text/javascript" src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">

    <style id="compiled-css" type="text/css">
        .bootstrap-select .dropdown-menu > li > a small.muted {
            display: none;
        }

        .bootstrap-select .dropdown-toggle .filter-option {
            position: relative;
            padding-left: 38px;
        }

            .bootstrap-select .dropdown-toggle .filter-option:before {
                content: "Item:";
                font-size: 14px;
                font-weight: 700;
                position: absolute;
                left: 0;
                top: 0;
            }

        /* EOS */
    </style>

    <script id="insert"></script>


</head>
<body>
    <form asp-controller="Store" asp-action="BarChartFilter" method="post">
        <div class="form-group">
            <label for="exampleFormControlSelect1">Stationery select</label>
            <select class="selectpicker show-tick"
                    name="IsHoliday2"
                    data_show_subtext="false" ,
                    data_live_search="true">
                <option data-hidden="true">Select</option>
                @for (var i = 0; i < history2.Count; i++)
                {
                    <text>
                        <option value='@history2[@i].Description' name='Stationery' id="Stationery">@history2[@i].Description</option>

                    </text>};
            </select>
        </div>

        <table align="center">
            <tr>
                <td>Start Month: </td>
                <td>
                    <input id="startMonth" name="startMonth" value="@ViewData["startMonth"]" />

                </td>
            </tr>

            <tr>
                <td>Ending Month: </td>
                <td>
                    <input id="endMonth" name="endMonth" value="@ViewData["endMonth"]" />

                </td>
            </tr>

            <tr>
                <td>Year: </td>
                <td>
                    <input id="Year" name="Year" value="@ViewData["Year"]" />

                </td>
            </tr>

        </table>

            <input type="submit" name="assign" id="assign" value="assign" class="btn btn-default">
            <input type="hidden" name="my_data" value="">
    </form>

    <script type="text/javascript">
        //<![CDATA[

        $(document).ready(function () {


            $("select").prop('class', 'selectpicker show-tick form-control');
            $("select").attr('data-live-search', true);
            $('#assign').click(function () {
                var ag = $('#selectpicker').val();
                $('[name="my_data"]').val(ag);
            });

        });

        //]]></script>

    <script>
        // tell the embed parent frame the height of the content
        if (window.parent && window.parent.parent) {
            window.parent.parent.postMessage(["resultsFrame", {
                height: document.body.getBoundingClientRect().height,
                slug: "a5r2vyu2"
            }], "*")
        }

        // always overwrite window.name, in case users try to set it manually
        window.name = "result"
    </script>
</body>
</html>


<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <title>Category Filter as column selector</title>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="robots" content="noindex, nofollow">
    <meta name="googlebot" content="noindex, nofollow">
    <meta name="viewport" content="width=device-width, initial-scale=1">


    <script type="text/javascript"
            src="//cdnjs.cloudflare.com/ajax/libs/mootools/1.4.5/mootools-core-full-nocompat.js"></script>

    <link rel="stylesheet" type="text/css" href="/css/result-light.css">

    <script type="text/javascript" src="http://www.google.com/jsapi?fake=.js"></script>

    <style id="compiled-css" type="text/css">

        /* EOS */
    </style>

    <script id="insert"></script>


</head>
<body>
    <div id="colFilter_div"></div>
    <div id="chart_div"></div>
    <div id="creativeCommons" style="text-align: center; width: 400px;">
        <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.en_US"><img alt="Creative Commons License" style="border-width:0" src="http://i.creativecommons.org/l/by-nc-sa/3.0/88x31.png" /></a><br /><span xmlns:dct="http://purl.org/dc/terms/" href="http://purl.org/dc/dcmitype/InteractiveResource" property="dct:title" rel="dct:type">Code to use a CategoryFilter as a column selector</span> by <span xmlns:cc="http://creativecommons.org/ns#" property="cc:attributionName">Andrew Gallant</span> is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.en_US">Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License</a>.
    </div>

    <script type="text/javascript">
    //<![CDATA[

        google.load('visualization', '1', { packages: ['controls'] });
        google.setOnLoadCallback(drawChart);

        function drawChart() {
            var data = new google.visualization.DataTable();
            data.addColumn('string', 'Year/Month');
          @for(var i = 0; i < 1; i++)
                {
                    <text> data.addColumn('number', '@history[@i].Stationery.Description');</text>
            };
            data.addRows([
            @for (var i = 0; i < history.Count - 1; i++) {
                <text>['@history[@i].Month @history[@i].Year @history[@i].Department.DeptName @history[@i].Stationery.Description',@history[@i].Qty],</text>
            }
            ['@history[history.Count-1].Month @history[history.Count-1].Year @history[history.Count-1].Department.DeptName @history[history.Count-1].Stationery.Description',@history[history.Count - 1].Qty]
                    ]);

            var columnsTable = new google.visualization.DataTable();
            columnsTable.addColumn('number', 'colIndex');
            columnsTable.addColumn('string', 'colLabel');
            var initState = { selectedValues: [] };
            // put the columns into this data table (skip column 0)
            for (var i = 1; i < data.getNumberOfColumns(); i++) {
                columnsTable.addRow([i, data.getColumnLabel(i)]);
                // you can comment out this next line if you want to have a default selection other than the whole list
                initState.selectedValues.push(data.getColumnLabel(i));
            }
            // you can set individual columns to be the default columns (instead of populating via the loop above) like this:
            // initState.selectedValues.push(data.getColumnLabel(4));

            var chart = new google.visualization.ChartWrapper({
                chartType: 'BarChart',
                containerId: 'chart_div',
                dataTable: data,
                options: {
                    title: 'Qty',
                    width: 1700,
                    height: 1200
                }
            });

            var columnFilter = new google.visualization.ControlWrapper({
                controlType: 'CategoryFilter',
                containerId: 'colFilter_div',
                dataTable: columnsTable,
                options: {
                    filterColumnLabel: 'colLabel',
                    ui: {
                        label: 'Columns',
                        allowTyping: false,
                        allowMultiple: true,
                        allowNone: false,
                        selectedValuesLayout: 'belowStacked'
                    }
                },
                state: initState
            });

            function setChartView() {
                var state = columnFilter.getState();
                var row;
                var view = {
                    columns: [0]
                };
                for (var i = 0; i < state.selectedValues.length; i++) {
                    row = columnsTable.getFilteredRows([{ column: 1, value: state.selectedValues[i] }])[0];
                    view.columns.push(columnsTable.getValue(row, 0));
                }
                // sort the indices into their original order
                view.columns.sort(function (a, b) {
                    return (a - b);
                });
                chart.setView(view);
                chart.draw();
            }
            google.visualization.events.addListener(columnFilter, 'statechange', setChartView);

            setChartView();
            columnFilter.draw();
        }
        //]]></script>

    <script>
        // tell the embed parent frame the height of the content
        if (window.parent && window.parent.parent) {
            window.parent.parent.postMessage(["resultsFrame", {
                height: document.body.getBoundingClientRect().height,
                slug: "WaUu2"
            }], "*")
        }

        // always overwrite window.name, in case users try to set it manually
        window.name = "result"
    </script>
</body>
</html>
