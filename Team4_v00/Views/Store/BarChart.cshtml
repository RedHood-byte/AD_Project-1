@{ 
     Layout = "~/Views/Shared/_StoreClerk.cshtml";
    var history = (List<DisbursementDetail>)ViewData["histories"];
    var history2 = (List<Stationery>)ViewData["histories2"];
    var departments = (List<Department>)ViewData["depts"];
}

<html>
<head>

    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <title>Table with Fixed Header and First Column</title>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="robots" content="noindex, nofollow">
    <meta name="googlebot" content="noindex, nofollow">
    <meta name="viewport" content="width=device-width, initial-scale=1">


    <script type="text/javascript"
            src="/js/lib/dummy.js"></script>

    <link rel="stylesheet" type="text/css" href="/css/result-light.css">

    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js"></script>

    <script id="insert"></script>


</head>
<body>
    <p style="color:red">@TempData["Error"]</p>
    <body>
        <table id="barChart_tbl">
            <thead style="background-color: lightskyblue">
                <tr>
                    <th>Stationery</th>
                    <th>Qty</th>
                    <th>A_Date</th>
                    <th>Department Name</th>
                    <th>Month</th>
                    <th>Year</th>
                </tr>
            </thead>
            <tbody>


                @for (var i = 0; i < history.Count; i++)
                {
                    <text>
                        <tr>
                            <td>@history[@i].Stationery.Description</td>
                            <td>@history[@i].Qty</td>
                            <td>@history[@i].A_Date</td>
                            <td>@history[@i].Department.DeptName</td>
                            <td>@history[@i].Month</td>
                            <td>@history[@i].Year</td>
                        </tr>
                    </text>};

            </tbody>
        </table>
    </body>


    <script type="text/javascript">
        //<![CDATA[


        $(document).ready(function () {
            $('tbody').scroll(function (e) { //detect a scroll event on the tbody
                /*
            Setting the thead left value to the negative valule of tbody.scrollLeft will make it track the movement
            of the tbody element. Setting an elements left value to that of the tbody.scrollLeft left makes it maintain 			it's relative position at the left of the table.
            */
                $('thead').css("left", -$("tbody").scrollLeft()); //fix the thead relative to the body scrolling
                $('thead th:nth-child(1)').css("left", $("tbody").scrollLeft()); //fix the first cell of the header
                $('tbody td:nth-child(1)').css("left", $("tbody").scrollLeft()); //fix the first column of tdbody
            });
        });



        //]]></script>

    <script>
        // tell the embed parent frame the height of the content
        if (window.parent && window.parent.parent) {
            window.parent.parent.postMessage(["resultsFrame", {
                height: document.body.getBoundingClientRect().height,
                slug: "bzuasLcz"
            }], "*")
        }

        // always overwrite window.name, in case users try to set it manually
        window.name = "result"
    </script>


</body>
</html>


<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <title>bootstrap-select: Initialize with JS</title>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="robots" content="noindex, nofollow">
    <meta name="googlebot" content="noindex, nofollow">
    <meta name="viewport" content="width=device-width, initial-scale=1">


    <script type="text/javascript"
            src="//code.jquery.com/jquery-2.2.4.js"></script>

    <link rel="stylesheet" type="text/css" href="/css/result-light.css">

    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.10.0/js/bootstrap-select.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.10.0/css/bootstrap-select.min.css">
    <script type="text/javascript" src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">

    <style id="compiled-css" type="text/css">
        .bootstrap-select .dropdown-menu > li > a small.muted {
            display: none;
        }

        .bootstrap-select .dropdown-toggle .filter-option {
            position: relative;
            padding-left: 38px;
        }

            .bootstrap-select .dropdown-toggle .filter-option:before {
                content: "Item:";
                font-size: 14px;
                font-weight: 700;
                position: absolute;
                left: 0;
                top: 0;
            }

        /* EOS */
    </style>

    <script id="insert"></script>


</head>

<form asp-controller="Store" asp-action="BarChartFilter" method="post">
    <div class="form-group row" style="padding-top:10px"></div>
    <div class="form-group row">
        <div class="col-sm-6">
            <div class="form-group row">
                <div class="col-sm-4">
                    <label for="exampleFormControlSelect1">Stationery select</label>
                </div>

                <div class="col-sm-8">
                    <select class="selectpicker show-tick"
                            name="IsHoliday2"
                            data_show_subtext="false" ,
                            data_live_search="true">
                        <option data-hidden="true">Select</option>
                        <option value='@history2[0].Description' name='Stationery' id="Stationery" selected>@history2[0].Description</option>

                        @for (var i = 1; i < history2.Count; i++)
                        {
                            <text>
                                <option value='@history2[@i].Description' name='Stationery' id="Stationery">@history2[@i].Description</option>

                            </text>};
                    </select>
                </div>

            </div>

            <input type="submit" name="Assign" id="assign" value="assign" class="btn btn-primary">
            <input type="hidden" name="my_data" value="">

            <div class="form-group row">
                <div class="col-sm-4">
                    <label>Start Date</label>
                </div>
                <div class="col-sm-8">
                    <input name="startDate" type="date" value="2019-11-05"/>
                </div>


            </div>
            <div class="form-group row">
                <div class="col-sm-4">
                    <label>End Date</label>
                </div>
                <div class="col-sm-8">
                    <input name="endDate" type="date"  value="2020-08-03"/>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-10">
                    <div id="colFilter_div"></div>
                </div>

            </div>
        </div>
        <div class="col-sm-6">

        </div>

    </div>
    <div class="form-group row">
        <div class="col-sm-8">
            <div class="col-sm-8" id="chart_div"></div>
        </div>

    </div>
   
</form>

<script type="text/javascript">
    //<![CDATA[

    $(document).ready(function () {


        $("select").prop('class', 'selectpicker show-tick form-control');
        $("select").attr('data-live-search', true);
        $('#assign').click(function () {
            var ag = $('#selectpicker').val();
            $('[name="my_data"]').val(ag);
        });

    });


    //]]></script>


@*
    <script>
        // tell the embed parent frame the height of the content
        if (window.parent && window.parent.parent) {
            window.parent.parent.postMessage(["resultsFrame", {
                height: document.body.getBoundingClientRect().height,
                slug: "a5r2vyu2"
            }], "*")
        }

        // always overwrite window.name, in case users try to set it manually
        window.name = "result"
    </script>
*@

</html>


<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <title>Category Filter as column selector</title>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="robots" content="noindex, nofollow">
    <meta name="googlebot" content="noindex, nofollow">
    <meta name="viewport" content="width=device-width, initial-scale=1">


    <script type="text/javascript"
            src="//cdnjs.cloudflare.com/ajax/libs/mootools/1.4.5/mootools-core-full-nocompat.js"></script>

    <link rel="stylesheet" type="text/css" href="/css/result-light.css">

    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js?fake=.js"></script>

    <style id="compiled-css" type="text/css">

        /* EOS */
    </style>

    <script id="insert"></script>


</head>
<div class="form-group row">
    <div class="col-sm-4" id="colFilter_div"></div>
</div>
<div id="colFilter_div"></div>
<div id="chart_div"></div>

<script type="text/javascript">
    //<![CDATA[

        google.load('visualization', '1', { packages: ['controls'] });
        google.setOnLoadCallback(drawChart);

        function drawChart() {
            var data = new google.visualization.DataTable();
            data.addColumn('string', 'Year/Month');
          @for(var i = 0; i < departments.Count ; i++)
                {
                    <text> data.addColumn('number', '@departments[@i].DeptName');</text>
            };
            data.addRows([
            @for (var i = 0; i < history.Count/departments.Count - 1; i++) {
                <text>['@history[@i].Month @history[@i].Year @history[@i].Stationery.Description',@history[@i*3].Qty,@history[(@i*3)+1].Qty,@history[(@i*3)+2].Qty],</text>
            }
                @if(history.Count%departments.Count==2 && history[history.Count-2].Department.id == departments[0].id)
                {
                    <text> ['@history[history.Count-1].Month @history[history.Count-1].Year @history[history.Count-1].Department.DeptName @history[history.Count-2].Stationery.Description',@history[history.Count - 2].Qty, 0, 0], </text>
                     <text> ['@history[history.Count-1].Month @history[history.Count-1].Year @history[history.Count-1].Department.DeptName @history[history.Count-1].Stationery.Description',@history[history.Count - 1].Qty, 0, 0]]); </text>

                }
                else if(history.Count%departments.Count==1 && history[history.Count-1].Department.id == departments[0].id)
                {
                    <text> ['@history[history.Count-1].Month @history[history.Count-1].Year @history[history.Count-1].Department.DeptName @history[history.Count-1].Stationery.Description',@history[history.Count - 1].Qty, 0, 0]]); </text>
                        }
                        else {
               <text> ['@history[history.Count-1].Month @history[history.Count-1].Year @history[history.Count-1].Department.DeptName @history[history.Count-1].Stationery.Description', @history[history.Count - 3].Qty, @history[history.Count - 2].Qty, @history[history.Count - 1].Qty]
                    ]);</text>
                }


            var columnsTable = new google.visualization.DataTable();
            columnsTable.addColumn('number', 'colIndex');
            columnsTable.addColumn('string', 'colLabel');
            var initState = { selectedValues: [] };
            // put the columns into this data table (skip column 0)
            for (var i = 1; i < data.getNumberOfColumns(); i++) {
                columnsTable.addRow([i, data.getColumnLabel(i)]);
                // you can comment out this next line if you want to have a default selection other than the whole list
                initState.selectedValues.push(data.getColumnLabel(i));
            }
            // you can set individual columns to be the default columns (instead of populating via the loop above) like this:
            // initState.selectedValues.push(data.getColumnLabel(4));

            var chart = new google.visualization.ChartWrapper({
                chartType: 'BarChart',
                containerId: 'chart_div',
                dataTable: data,
                options: {
                    title: 'Qty',
                    width: 1700,
                    height: 1200
                }
            });

            var columnFilter = new google.visualization.ControlWrapper({
                controlType: 'CategoryFilter',
                containerId: 'colFilter_div',
                dataTable: columnsTable,
                options: {
                    filterColumnLabel: 'colLabel',
                    ui: {
                        label: 'Columns',
                        allowTyping: false,
                        allowMultiple: true,
                        allowNone: false,
                        selectedValuesLayout: 'belowStacked'
                    }
                },
                state: initState
            });

            function setChartView() {
                var state = columnFilter.getState();
                var row;
                var view = {
                    columns: [0]
                };
                for (var i = 0; i < state.selectedValues.length; i++) {
                    row = columnsTable.getFilteredRows([{ column: 1, value: state.selectedValues[i] }])[0];
                    view.columns.push(columnsTable.getValue(row, 0));
                }
                // sort the indices into their original order
                view.columns.sort(function (a, b) {
                    return (a - b);
                });
                chart.setView(view);
                chart.draw();
            }
            google.visualization.events.addListener(columnFilter, 'statechange', setChartView);

            setChartView();
            columnFilter.draw();
        }
        //]]></script>

<script>
    // tell the embed parent frame the height of the content
    if (window.parent && window.parent.parent) {
        window.parent.parent.postMessage(["resultsFrame", {
            height: document.body.getBoundingClientRect().height,
            slug: "WaUu2"
        }], "*")
    }

    // always overwrite window.name, in case users try to set it manually
    window.name = "result"
</script>

</html>
